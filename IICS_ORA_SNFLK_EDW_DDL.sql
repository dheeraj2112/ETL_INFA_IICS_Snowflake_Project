--Creating the database and schemas as required by IICS.
--0. Create the Snowflake account as required.

--1. Create Database, if not exists

CREATE DATABASE IF NOT EXISTS EDW ;

--2. USE the Database context

USE EDW ;

--3. Create the schemas

CREATE SCHEMA IF NOT EXISTS EDW_STG;
CREATE SCHEMA IF NOT EXISTS EDW;
CREATE SCHEMA IF NOT EXISTS EDW_EXTR;

---EDW_STG TABLE DEFINITION

USE EDW.EDW_STG;

--REGION 

CREATE OR REPLACE TABLE EDW.EDW_STG.REGIONS  
    ( REGION_ID      NUMBER   
    , REGION_NAME    VARCHAR2(25)
    , MD5_HASH  VARCHAR2(32)
	, EDW_UPDATED_BY VARCHAR2(32)
	, EDW_CREATE_TIMESTAMP TIMESTAMP
	, EDW_UPDATE_TIMESTAMP TIMESTAMP	
    );

-- COUNTRIES

CREATE OR REPLACE TABLE EDW.EDW_STG.COUNTRIES   
    ( COUNTRY_ID      CHAR(2)   
    , COUNTRY_NAME    VARCHAR2(40)   
    , REGION_ID       NUMBER    
    , MD5_HASH  VARCHAR2(32)
	, EDW_UPDATED_BY VARCHAR2(32)
	, EDW_CREATE_TIMESTAMP TIMESTAMP
	, EDW_UPDATE_TIMESTAMP TIMESTAMP	
    ) ;
	
--LOCATIONS

CREATE OR REPLACE TABLE EDW.EDW_STG.LOCATIONS  
    ( LOCATION_ID    NUMBER(4)  NOT NULL 
    , STREET_ADDRESS VARCHAR2(40)  
    , POSTAL_CODE    VARCHAR2(12)  
    , CITY           VARCHAR2(30)  
    , STATE_PROVINCE VARCHAR2(25)  
    , COUNTRY_ID     CHAR(2)  
    , MD5_HASH  VARCHAR2(32)
	, EDW_UPDATED_BY VARCHAR2(32)
	, EDW_CREATE_TIMESTAMP TIMESTAMP
	, EDW_UPDATE_TIMESTAMP TIMESTAMP
    );


--DEPARTMENTS

CREATE OR REPLACE TABLE EDW.EDW_STG.DEPARTMENTS  
    ( DEPARTMENT_ID    NUMBER(4) 
    , DEPARTMENT_NAME  VARCHAR2(30)  
    , MANAGER_ID       NUMBER(6)  
    , LOCATION_ID      NUMBER(4)
    , MD5_HASH  VARCHAR2(32)
	, EDW_UPDATED_BY VARCHAR2(32)
	, EDW_CREATE_TIMESTAMP TIMESTAMP
	, EDW_UPDATE_TIMESTAMP TIMESTAMP	
    );

--JOBS

CREATE OR REPLACE TABLE EDW.EDW_STG.JOBS  
    ( JOB_ID         VARCHAR2(10)  
    , JOB_TITLE      VARCHAR2(35)  
    , MIN_SALARY     NUMBER(6)  
    , MAX_SALARY     NUMBER(6) 
    , MD5_HASH  VARCHAR2(32)
	, EDW_UPDATED_BY VARCHAR2(32)
	, EDW_CREATE_TIMESTAMP TIMESTAMP
	, EDW_UPDATE_TIMESTAMP TIMESTAMP	
	
	);
	
--EDW.EDW_STG.EMPLOYEES

CREATE OR REPLACE TABLE EDW.EDW_STG.EMPLOYEES
    ( EMPLOYEE_ID    NUMBER(6)
    , FIRST_NAME     VARCHAR2(20)  
    , LAST_NAME      VARCHAR2(25)   
    , EMAIL          VARCHAR2(25)  
    , PHONE_NUMBER   VARCHAR2(20)  
    , HIRE_DATE      DATE
    , JOB_ID         VARCHAR2(10)
    , SALARY         NUMBER(8,2) 
    , COMMISSION_PCT NUMBER(2,2)  
    , MANAGER_ID     NUMBER(6)
    , DEPARTMENT_ID  NUMBER(4)
	, MD5_HASH  VARCHAR2(32)
	, EDW_UPDATED_BY VARCHAR2(32)
	, EDW_CREATE_TIMESTAMP TIMESTAMP
	, EDW_UPDATE_TIMESTAMP TIMESTAMP
    );
	
--JOB_HISTORY

CREATE OR REPLACE TABLE EDW.EDW_STG.JOB_HISTORY  
    ( EMPLOYEE_ID   NUMBER(6)  
    , START_DATE    DATE  
    , END_DATE      DATE  
    , JOB_ID        VARCHAR2(10)  
    , DEPARTMENT_ID NUMBER(4) 
	, MD5_HASH  VARCHAR2(32)
	, EDW_UPDATED_BY VARCHAR2(32)
	, EDW_CREATE_TIMESTAMP TIMESTAMP
	, EDW_UPDATE_TIMESTAMP TIMESTAMP	
    ) ;

--TARGET TRUNCATE 

TRUNCATE TABLE EDW.EDW_STG.REGIONS;
TRUNCATE TABLE EDW.EDW_STG.COUNTRIES;
TRUNCATE TABLE EDW.EDW_STG.LOCATIONS;
TRUNCATE TABLE EDW.EDW_STG.DEPARTMENTS;
TRUNCATE TABLE EDW.EDW_STG.JOBS;
TRUNCATE TABLE EDW.EDW_STG.EDW.EDW_STG.;
TRUNCATE TABLE EDW.EDW_STG.JOB_HISTORY;

--EDW_STH_TARGET COUNTS VALIDATION

SELECT 'REGIONS' AS Table_Name, COUNT(1) TABLE_COUNTS FROM EDW.EDW_STG.REGIONS
UNION ALL 
SELECT 'COUNTRIES' AS Table_Name, COUNT(1) TABLE_COUNTS FROM EDW.EDW_STG.COUNTRIES
UNION ALL 
SELECT 'LOCATIONS' AS Table_Name, COUNT(1) TABLE_COUNTS FROM EDW.EDW_STG.LOCATIONS 
UNION ALL 
SELECT 'DEPARTMENTS' AS Table_Name, COUNT(1) TABLE_COUNTS FROM EDW.EDW_STG.DEPARTMENTS
UNION ALL 
SELECT 'JOBS' AS Table_Name, COUNT(1) TABLE_COUNTS FROM EDW.EDW_STG.JOBS
UNION ALL
SELECT 'EMPLOYEES' AS Table_Name, COUNT(1) AS TABLE_COUNTS FROM EDW.EDW_STG.EMPLOYEES
UNION ALL 
SELECT 'JOB_HISTORY' AS Table_Name, COUNT(1) TABLE_COUNTS FROM EDW.EDW_STG.JOB_HISTORY
UNION ALL 
SELECT 'EMP_DETAILS_VIEW' AS Table_Name, COUNT(1) TABLE_COUNTS FROM EDW.EDW_STG.EMP_DETAILS_VIEW


---EDW TABLE DEFINITIONS

USE EDW.EDW;

--REGION 

CREATE OR REPLACE TABLE EDW.EDW.REGIONS  
    ( 
	  REGION_KEY INT AUTOINCREMENT START 1 INCREMENT 1
	, REGION_ID      NUMBER   
    , REGION_NAME    VARCHAR2(25)
    , MD5_HASH  VARCHAR2(32)
	, EDW_UPDATED_BY VARCHAR2(32)
	, EDW_CREATE_TIMESTAMP TIMESTAMP_NTZ 
	, EDW_UPDATE_TIMESTAMP TIMESTAMP_NTZ 
    , EDW_EFFECTIVE_START_DATE 	TIMESTAMP_NTZ 
	, EDW_EFFECTIVE_END_DATE 	TIMESTAMP_NTZ 
	, ACTIVE_FLAG  CHAR(1)
    );

-- COUNTRIES

CREATE OR REPLACE TABLE EDW.EDW.COUNTRIES   
    ( 
	  COUNTRY_KEY  INT AUTOINCREMENT START 1 INCREMENT 1
	, COUNTRY_ID      CHAR(2)   
    , COUNTRY_NAME    VARCHAR2(40)   
    , REGION_ID       NUMBER    
    , MD5_HASH  VARCHAR2(32)
	, EDW_UPDATED_BY VARCHAR2(32)
	, EDW_CREATE_TIMESTAMP TIMESTAMP_NTZ 
	, EDW_UPDATE_TIMESTAMP TIMESTAMP_NTZ 
    , EDW_EFFECTIVE_START_DATE 	TIMESTAMP_NTZ 
	, EDW_EFFECTIVE_END_DATE 	TIMESTAMP_NTZ 
	, ACTIVE_FLAG  CHAR(1)
    ) ;
	
--LOCATIONS

CREATE OR REPLACE TABLE EDW.EDW.LOCATIONS  
    ( 
	  LOCATION_KEY INT AUTOINCREMENT START 1 INCREMENT 1
	, LOCATION_ID    NUMBER(4)  NOT NULL 
    , STREET_ADDRESS VARCHAR2(40)  
    , POSTAL_CODE    VARCHAR2(12)  
    , CITY           VARCHAR2(30)  
    , STATE_PROVINCE VARCHAR2(25)  
    , COUNTRY_ID     CHAR(2)  
    , MD5_HASH  VARCHAR2(32)
	, EDW_UPDATED_BY VARCHAR2(32)
	, EDW_CREATE_TIMESTAMP TIMESTAMP_NTZ 
	, EDW_UPDATE_TIMESTAMP TIMESTAMP_NTZ 
    , EDW_EFFECTIVE_START_DATE 	TIMESTAMP_NTZ 
	, EDW_EFFECTIVE_END_DATE 	TIMESTAMP_NTZ 
	, ACTIVE_FLAG  CHAR(1)
    );


--DEPARTMENTS

CREATE OR REPLACE TABLE EDW.EDW.DEPARTMENTS  
    ( 
	  DEPARTMENT_KEY INT AUTOINCREMENT START 1 INCREMENT 1
	, DEPARTMENT_ID    NUMBER(4) 
    , DEPARTMENT_NAME  VARCHAR2(30)  
    , MANAGER_ID       NUMBER(6)  
    , LOCATION_ID      NUMBER(4)
    , MD5_HASH  VARCHAR2(32)
	, EDW_UPDATED_BY VARCHAR2(32)
	, EDW_CREATE_TIMESTAMP TIMESTAMP_NTZ 
	, EDW_UPDATE_TIMESTAMP TIMESTAMP_NTZ 
    , EDW_EFFECTIVE_START_DATE 	TIMESTAMP_NTZ 
	, EDW_EFFECTIVE_END_DATE 	TIMESTAMP_NTZ 
	, ACTIVE_FLAG  CHAR(1)
    );

--JOBS

CREATE OR REPLACE TABLE EDW.EDW.JOBS  
    ( 
	  JOB_KEY INT AUTOINCREMENT START 1 INCREMENT 1
	, JOB_ID         VARCHAR2(10)  
    , JOB_TITLE      VARCHAR2(35)  
    , MIN_SALARY     NUMBER(6)  
    , MAX_SALARY     NUMBER(6) 
    , MD5_HASH  VARCHAR2(32)
	, EDW_UPDATED_BY VARCHAR2(32)
	, EDW_CREATE_TIMESTAMP TIMESTAMP_NTZ 
	, EDW_UPDATE_TIMESTAMP TIMESTAMP_NTZ 
    , EDW_EFFECTIVE_START_DATE 	TIMESTAMP_NTZ 
	, EDW_EFFECTIVE_END_DATE 	TIMESTAMP_NTZ 
	, ACTIVE_FLAG  CHAR(1)
	
	);
	
--EDW.EDW.EMPLOYEES

CREATE OR REPLACE TABLE EDW.EDW.EMPLOYEES  
    ( 
	  EMPLOYEE_KEY INT AUTOINCREMENT START 1 INCREMENT 1
	, EMPLOYEE_ID    NUMBER(6)
    , FIRST_NAME     VARCHAR2(20)  
    , LAST_NAME      VARCHAR2(25)   
    , EMAIL          VARCHAR2(25)  
    , PHONE_NUMBER   VARCHAR2(20)  
    , HIRE_DATE      DATE
    , JOB_ID         VARCHAR2(10)
    , SALARY         NUMBER(8,2) 
    , COMMISSION_PCT NUMBER(2,2)  
    , MANAGER_ID     NUMBER(6)
    , DEPARTMENT_ID  NUMBER(4)
	, MD5_HASH  VARCHAR2(32)
	, EDW_UPDATED_BY VARCHAR2(32)
	, EDW_CREATE_TIMESTAMP TIMESTAMP_NTZ 
	, EDW_UPDATE_TIMESTAMP TIMESTAMP_NTZ 
    , EDW_EFFECTIVE_START_DATE 	TIMESTAMP_NTZ 
	, EDW_EFFECTIVE_END_DATE 	TIMESTAMP_NTZ 
	, ACTIVE_FLAG  CHAR(1)
    );
	
--JOB_HISTORY

CREATE OR REPLACE TABLE EDW.EDW.JOB_HISTORY  
    ( 
	  JOB_HISTORY_KEY INT AUTOINCREMENT START 1 INCREMENT 1
	, EMPLOYEE_ID   NUMBER(6)  
    , START_DATE    DATE  
    , END_DATE      DATE  
    , JOB_ID        VARCHAR2(10)  
    , DEPARTMENT_ID NUMBER(4) 
	, MD5_HASH  VARCHAR2(32)
	, EDW_UPDATED_BY VARCHAR2(32)
	, EDW_CREATE_TIMESTAMP TIMESTAMP_NTZ 
	, EDW_UPDATE_TIMESTAMP TIMESTAMP_NTZ 
    , EDW_EFFECTIVE_START_DATE 	TIMESTAMP_NTZ 
	, EDW_EFFECTIVE_END_DATE 	TIMESTAMP_NTZ 
	, ACTIVE_FLAG  CHAR(1)	
    ) ;

--EDW TARGET TRUNCATE 

TRUNCATE TABLE EDW.EDW.REGIONS;
TRUNCATE TABLE EDW.EDW.COUNTRIES;
TRUNCATE TABLE EDW.EDW.LOCATIONS;
TRUNCATE TABLE EDW.EDW.DEPARTMENTS;
TRUNCATE TABLE EDW.EDW.JOBS;
TRUNCATE TABLE EDW.EDW.EMPLOYEES;
TRUNCATE TABLE EDW.EDW.JOB_HISTORY;


--TRUNCATE ALL EDW_STG and EDW tables

TRUNCATE TABLE EDW.EDW_STG.REGIONS;
TRUNCATE TABLE EDW.EDW_STG.COUNTRIES;
TRUNCATE TABLE EDW.EDW_STG.LOCATIONS;
TRUNCATE TABLE EDW.EDW_STG.DEPARTMENTS;
TRUNCATE TABLE EDW.EDW_STG.JOBS;
TRUNCATE TABLE EDW.EDW_STG.EMPLOYEES;
TRUNCATE TABLE EDW.EDW_STG.JOB_HISTORY;

TRUNCATE TABLE EDW.EDW.REGIONS;
TRUNCATE TABLE EDW.EDW.COUNTRIES;
TRUNCATE TABLE EDW.EDW.LOCATIONS;
TRUNCATE TABLE EDW.EDW.DEPARTMENTS;
TRUNCATE TABLE EDW.EDW.JOBS;
TRUNCATE TABLE EDW.EDW.EMPLOYEES;
TRUNCATE TABLE EDW.EDW.JOB_HISTORY;

--EDW TARGET COUNTS VALIDATION

SELECT 'REGIONS' AS Table_Name, COUNT(1) TABLE_COUNTS FROM EDW.EDW.REGIONS
UNION ALL 
SELECT 'COUNTRIES' AS Table_Name, COUNT(1) TABLE_COUNTS FROM EDW.EDW.COUNTRIES
UNION ALL 
SELECT 'LOCATIONS' AS Table_Name, COUNT(1) TABLE_COUNTS FROM EDW.EDW.LOCATIONS 
UNION ALL 
SELECT 'DEPARTMENTS' AS Table_Name, COUNT(1) TABLE_COUNTS FROM EDW.EDW.DEPARTMENTS
UNION ALL 
SELECT 'JOBS' AS Table_Name, COUNT(1) TABLE_COUNTS FROM EDW.EDW.JOBS
UNION ALL
SELECT 'EMPLOYEES' AS Table_Name, COUNT(1) AS TABLE_COUNTS FROM EDW.EDW.EMPLOYEES
UNION ALL 
SELECT 'JOB_HISTORY' AS Table_Name, COUNT(1) TABLE_COUNTS FROM EDW.EDW.JOB_HISTORY
UNION ALL 
SELECT 'EMP_DETAILS_VIEW' AS Table_Name, COUNT(1) TABLE_COUNTS FROM EDW.EDW.EMP_DETAILS_VIEW



--EDW_EXTR EMPLOYEE_DETAILS VIEW 


CREATE OR REPLACE VIEW EDW_EXTR.EMP_DETAILS_VIEW ("EMPLOYEE_ID", "JOB_ID", "MANAGER_ID", "DEPARTMENT_ID", "LOCATION_ID", 
"COUNTRY_ID", "FIRST_NAME", "LAST_NAME", "SALARY", "COMMISSION_PCT", "DEPARTMENT_NAME", "JOB_TITLE", "CITY", "STATE_PROVINCE", 
"COUNTRY_NAME", "REGION_NAME") AS 
  SELECT  
  E.EMPLOYEE_ID,   
  E.JOB_ID,   
  E.MANAGER_ID,   
  E.DEPARTMENT_ID,  
  D.LOCATION_ID,  
  L.COUNTRY_ID,  
  E.FIRST_NAME,  
  E.LAST_NAME,  
  E.SALARY,  
  E.COMMISSION_PCT,  
  D.DEPARTMENT_NAME,  
  J.JOB_TITLE,  
  L.CITY,  
  L.STATE_PROVINCE,  
  C.COUNTRY_NAME,  
  R.REGION_NAME  
FROM  
  EDW.EMPLOYEES E,  
  EDW.DEPARTMENTS D,  
  EDW.JOBS J,  
  EDW.LOCATIONS L,  
  EDW.COUNTRIES C,  
  EDW.REGIONS R  
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID  
  AND D.LOCATION_ID = L.LOCATION_ID  
  AND L.COUNTRY_ID = C.COUNTRY_ID  
  AND C.REGION_ID = R.REGION_ID  
  AND J.JOB_ID = E.JOB_ID   
	
--SF_LINEITEM
	
CREATE OR REPLACE TABLE EDW.EDW_STG.SF_LINEITEM (
	L_ORDERKEY VARCHAR(255),
	L_PARTKEY VARCHAR(255),
	L_SUPPKEY VARCHAR(255),
	L_LINENUMBER VARCHAR(255),
	L_QUANTITY VARCHAR(255),
	L_EXTENDEDPRICE VARCHAR(255),
	L_DISCOUNT VARCHAR(255),
	L_TAX VARCHAR(255),
	L_RETURNFLAG VARCHAR(255),
	L_LINESTATUS VARCHAR(255),
	L_SHIPDATE VARCHAR(255),
	L_COMMITDATE VARCHAR(255),
	L_RECEIPTDATE VARCHAR(255),
	L_SHIPINSTRUCT VARCHAR(25),
	L_SHIPMODE VARCHAR(255),
	L_COMMENT VARCHAR(255)
);